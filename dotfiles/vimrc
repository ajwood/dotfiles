""
" My reworked .vimrc based on recommendations from
" https://realpython.com/vim-and-python-a-match-made-in-heaven/
" 

set nocompatible              " required
filetype off                  " required

""
" Setup Vundle for managing plugins
""

" Make sure you already ran:
" $ git clone \
" 	https://github.com/gmarik/Vundle.vim.git \
" 	~/.vim/bundle/Vundle.vim


" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" https://github.com/tmhedberg/SimpylFold
Plugin 'tmhedberg/SimpylFold'

" https://github.com/vim-scripts/indentpython.vim
Plugin 'vim-scripts/indentpython.vim'

" https://github.com/ycm-core/YouCompleteMe
Plugin 'Valloric/YouCompleteMe'

" https://github.com/vim-syntastic/syntastic
Plugin 'vim-syntastic/syntastic'

" https://github.com/jnurmine/Zenburn
Plugin 'jnurmine/Zenburn'

" https://github.com/altercation/vim-colors-solarized
Plugin 'altercation/vim-colors-solarized'

" https://github.com/preservim/nerdtree
Plugin 'scrooloose/nerdtree'

" https://github.com/kien/ctrlp.vim
Plugin 'kien/ctrlp.vim'

" Any time a new plugin is added, must run `:PluginInstall` inside vim

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

""
" End Vundle
""

"open file at line where last closed
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

" Enable folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

" See docstrings for folded code
"let g:SimpylFold_docstring_preview=1

" PEP 8 style indentation
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2


" Mark bad whitespace as red
highlight BadWhitespace ctermbg=red guibg=red
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" Set utf-8 encoding
set encoding=utf-8

" The first line ensures that the auto-complete window goes away when youâ€™re
" done with it, and the second defines a shortcut for goto definition.
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

if has('gui_running')
  set background=dark
  colorscheme solarized
else
  colorscheme zenburn
endif

" Toggle dark/light
call togglebg#map("<F5>")

" ignore files in NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$']

" pretty
let python_highlight_all=1
syntax on
set nu
set hls
set nowrapscan
set wildmode=longest,list

if &diff && ! has('gui_running')
	colorscheme murphy
endif
